version: '3'
services:
  nginx:
    container_name: nginx_web
    build:
      context: .
      dockerfile: ./.docker/nginx/web/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-www-data}
        - TZ=${TZ}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./.docker/nginx/web/nginx.conf:/etc/nginx/nginx.conf
#      - ./.docker/nginx/web/dev.default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/web/ssl:/var/www/ssl
      - ./.logs/nginx/web:/var/log/nginx
      - ./backend:/var/www/backend
      - ./frontend:/var/www/frontend
    depends_on:
      - php
      - node
    networks:
      - app-network

  php:
    container_name: php8.2
    build:
      context: .
      dockerfile: ./.docker/php/8.2/Dockerfile
      args:
        - APP_ENV=dev
        - WORK_DIR=/var/www/backend
        - TZ=${TZ}
    restart: unless-stopped
    expose:
      - '9000'
    volumes:
      - ./backend:/var/www/backend
      - ./.logs/backend:/var/log/backend
    environment:
      PHP_IDE_CONFIG: "serverName=Docker-php"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - mariadb
      - redis
    networks:
      - app-network

  mariadb:
    container_name: mariadb
    image: mariadb:10.11  # LTS 버전
    restart: unless-stopped
    ports:
      - '3306:3306'
    environment:
      MYSQL_HOST: ${DB_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
#      MYSQL_ROOT_HOST: %
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: ${TZ}
    volumes:
      - ./.database/mariadb:/var/lib/mysql
      - ./.logs/mariadb:/var/log/mariadb
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:6-alpine
    restart: unless-stopped
    privileged: true
    volumes:
      - ./.docker/redis/redis.conf:/usr/local/redis/redis.conf
      - ./.database/redis:/data
    ports:
      - '6379:6379'
    command:
      - redis-server
      - /usr/local/redis/redis.conf
    networks:
      - app-network

  node:
    container_name: nuxt-js
    build:
      context: .
      dockerfile: .docker/node/Dockerfile
      args:
        - WORK_DIR=/var/www/frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/var/www/frontend
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge